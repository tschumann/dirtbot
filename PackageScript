# vim: set ts=8 sts=2 sw=2 tw=99 et ft=python:
import os

# This is where the files will be output to
# package is the default
builder.SetBuildFolder('package')

# Add any folders you need to this list
folder_list = [
  'addons/metamod',
  'addons/rcbot2/bin',
  'addons/rcbot2/config',
  # 'addons/rcbot2/launcher',
  # 'addons/rcbot2/manual',
  'addons/rcbot2/profiles',
  'addons/rcbot2/waypoints',
]

# Create the distribution folder hierarchy.
folder_map = {}
for folder in folder_list:
  norm_folder = os.path.normpath(folder)
  folder_map[folder] = builder.AddFolder(norm_folder)

# Do all straight-up file copies from the source tree.
def CopyFiles(src, dest, files):
  if not dest:
    dest = src
  dest_entry = folder_map[dest]
  for source_file in files:
    source_path = os.path.join(builder.sourcePath, src, source_file)
    builder.AddCopy(source_path, dest_entry)

CopyFiles('package', 'addons/metamod',
  [ 'rcbot2.vdf', ]
)

# RCBot2 config files
CopyFiles('package/config', 'addons/rcbot2/config',
  [
    'accessclients.ini',
    'attack_util.csv',
    'bot_mods.ini',
    'bot_quota.ini',
    'config.ini',
    'hookinfo.ini',
    'normal_util.csv',
    'weapons.ini'
  ]
)

# Copy binaries.
for cxx_task in MMS.binaries:
  builder.AddCopy(cxx_task.binary, folder_map['addons/rcbot2/bin'])

# TODO: 64-Bit support # Copy binaries.
#for cxx_task in MMS.mms_plugins:
#  if cxx_task.target.arch == 'x86_64':
#  # mms expects our loader (RCBot2Meta) to exist in /bin/
#  if cxx_task.target.arch == 'x86_64' and not 'RCBot2Meta' in cxx_task.binary.path:
#    builder.AddCopy(cxx_task.binary, folder_map['addons/rcbot2/bin/x64'])
#  else:
#    builder.AddCopy(cxx_task.binary, folder_map['addons/rcbot2/bin'])